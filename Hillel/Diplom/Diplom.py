# Написати програму для роботи з даними про людей.
# Програма повинна вміти завантажувати дані з файлу, зберігати у файл, вводити
# нові записи і шукати існуючі записи.
# Програма зберігає дані про людину, а саме: ПІБ, дата народження, дата
# смерті (може бути відсутня) і стать. При цьому ПІБ вводиться 3 полями:
# Ім'я (обов'язково), Прізвище та По-батькові можуть не вводитись.
# Програма повинна вміти обчислювати вік людини (кількість повних років) на
# на підставі дати народження та дати смерті або сьогоднішньої дати, якщо дата
# смерті відсутня. Дата народження та дата смерті може вводитись у форматі:
# 12.10.1980
# 11 10 2000
# 01/02/1995
# 3-9-2007
# Пошук може здійснюватися па імені, прізвищу та по батькові і видає всі варіанти,
# які підходять під рядок пошуку (це може бути ім'я або прізвище, або ім'я
# і прізвище, або лише частина імені тощо). Наприклад, є такі записи:
# Євген Крут Михайлович, 12.10.1980, 11.10.2001, m
# Євгенія, 12.10.1980, 12.10.2001, f
# Дмитро Євгенович, 10.03.2000, m
# При пошуку "євген", видаються такі дані:
# Євген Крут Михайлович 20 років, чоловік. Народився 12.10.1980. Помер: 11.10.2001.
# Євгенія 21 рік, жінка. Народилася 12.10.1980. Вмерла: 12.10.2001.
# Дмитро Євгенович 22 роки, чоловік. Народився 10.03.2000.
#
# Програма починає працювати з порожньою базою даних. Оператор може
# заповнювати її, а може за бажання завантажити раніше збережені дані з файлу
# (бажано Excel). Коли є якісь записи оператор може зберегти їх у файл.
#
# Бажана структура програми:
# - в основній частині програми знаходиться вічний цикл з меню, що може вибрати оператор;
# самі дані організовані у вигляді класу в іншому файлі, який імпортується у файл
# основної частини програми, де створюється об'єкт відповідного класу перед заходом
# у вічний цикл;
# - всі пункти меню основної частини програми викликають ті чи інші методи у створеного
# об'єкта даних;
# - при бажанні можна у третьому файлі створити окремий клас Person який буде
# імпортуватися у файл з даними. Саме у цьому класі відбуватиметься валідація
# введених даних.
#
# *Всі перелічені описи є побажаннями щодо реалізації дипломного проекту та в
# силу тих чи інших причин можуть бути змінені за бажанням студента. Основні вимоги:
# - програма дозволяє ввести нові дані про людей;
# - проводити пошук за вже введеними даними;
# - правильно розраховувати кількість повних років людини на основі дати народження та дати
# смерті або поточної дати;
# - дуже бажано, щоб дані можна було зберігати у файл та загружати із файлу.
import pandas as pd
from pandas.io.excel import ExcelWriter
from datetime import datetime
from datetime import timedelta

def age_of_people():
    # now_time = datetime.today()
    if date_of_people > date_of_death:
        print("У вас помилка в даті народження або даті смерті")
    else:
        age = date_of_death - date_of_people
    if int(age//year) == 1:
        return f'{int(age//year)} рік'
    elif (1 < int(age//year) > 11 or 19 < int(age//year)) and filter(lambda age: int(age[-1]), end_0):
        age = int(age//year)
        return f'{age} рік'
    elif (1 < int(age//year) > 11 or 19 < int(age//year)) and filter(lambda age: int(age[-1]), end_1):
        age = int(age // year)
        return f'{age} роки'
    elif (1 < int(age//year) > 11 or 19 < int(age//year)) and filter(lambda age: int(age[-1]), end_2):
        age = int(age // year)
        return f'{age} років'
    elif 10 < int(age//year) > 20:
        age = int(age // year)
        return f'{age} років'
def func_open_and_write_excel():
    date_basic = pd.read_excel("Date_basic.xlsx")
    with pd.ExcelWriter("Date_basic.xlsx") as writer:
        date_basic.to_excel(writer)

def func_search():
    pass

date_not_death = [False, '-', '0', '']
# firstname = input("Вкажіть ім'я: ")
# lastname = input("Вкажіть прізвище: ")
# surname = input("Вкажіть по-батькові: ")
date_of_people =input("Вкажіть дату народження: ").replace(".", '-', 2).replace("/", '-', 2).replace(" ", '-', 2)
date_of_people = datetime.strptime(date_of_people, '%d-%m-%Y')
date_of_death = input("Вкажіть дату смерті: ").replace(".", '-', 2).replace("/", '-', 2).replace(" ", '-', 2)
for date_of_death in [date_not_death]:
    date_of_death = datetime.today().strptime(date_of_death, '%d-%m-%Y')
else:
    date_of_death = datetime.strptime(date_of_death, '%d-%m-%Y')
# become = input("Вкажіть стать: ")

year = timedelta(days=365)
mounts = timedelta(days=30)

end_0 = [1] # рік
end_1 = [2, 3, 4] # роки
end_2 = [5, 6, 7, 8, 9, 0] # років

age = age_of_people()
print(age)

with open('Data_bessic.xlsx', 'w', encoding="utf-8") as file:
    book = pd.read_excel('Data_bessic.xlsx')
